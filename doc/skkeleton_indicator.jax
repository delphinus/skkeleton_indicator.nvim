*skkeleton_indicator.txt*		    Skkeleton の状態を示すインジケータ

Author: delphinus
Licence: zlib

CONTENTS

Version Warning		|skkeleton-indicator-version-warning|
Introduction		|skkeleton-indicator-introduction|
Usage			|skkeleton-indicator-usage|
Config			|skkeleton-indicator-config|
Caveats			|skkeleton-indicator-caveats|


==============================================================================
VERSION WARNING				   *skkeleton-indicator-version-warning*

このブランチ（ `main` ）の開発はすでに終了しています。Neovim 0.10.0 以上に更新し
た上で、 `v2` ブランチ（レポジトリーのデフォルトです）を利用してください。
https://github.com/delphinus/skkeleton_indicator.nvim


==============================================================================
INTRODUCTION				      *skkeleton-indicator-introduction*

*skkeleton_indicator* は |skkeleton| の状態をカーソルの側に表示します。

NOTE: このプラグインは Neovim 専用です。

==============================================================================
USAGE						     *skkeleton-indicator-usage*

プラグインを読み込んだ後に `setup()` 関数を呼び出してください。
>lua
    require("skkeleton_indicator").setup {}
<
文字列が表示される際のハイライトを変える場合、 `setup()` を呼ぶ前に定義してくだ
さい。
>lua
    vim.api.nvim_set_hl(0, "SkkeletonIndicatorEiji",
      { fg = "#88c0d0", bg = "#2e3440", bold = true })
    vim.api.nvim_set_hl(0, "SkkeletonIndicatorHira",
      { fg = "#2e3440", bg = "#a3be8c", bold = true })
    vim.api.nvim_set_hl(0, "SkkeletonIndicatorKata",
      { fg = "#2e3440", bg = "#ebcb8b", bold = true })
    vim.api.nvim_set_hl(0, "SkkeletonIndicatorHankata",
      { fg = "#2e3440", bg = "#b48ead", bold = true })
    vim.api.nvim_set_hl(0, "SkkeletonIndicatorZenkaku",
      { fg = "#2e3440", bg = "#88c0d0", bold = true })
    vim.api.nvim_set_hl(0, "SkkeletonIndicatorAbbrev",
      { fg = "#e5e9f0", bg = "#bf616a", bold = true })
    require("skkeleton_indicator").setup {}
<
既存のハイライトを使う場合はその名称を `setup()` を呼ぶ際に指定してください。
>lua
    require("skkeleton_indicator").setup {
      eijiHlName = "LineNr",
      hiraHlName = "String",
      kataHlName = "Todo",
      hankataHlName = "Special",
      zenkakuHlName = "LineNr",
      abbrevHlName = "Error",
    }
<
インジケーターに枠線を付けたい場合は `border` オプションを使ってください。
>lua
    require("skkeleton_indicator").setup { border = "single" }
<
==============================================================================
CONFIG						    *skkeleton-indicator-config*

eijiHlName				 *skkeleton-indicator-config-eijiHlName*
	(`string`: デフォルト `"SkkeletonIndicatorEiji"`)
	直接入力モードで表示される文字列に利用されるハイライトグループです。

hiraHlName				 *skkeleton-indicator-config-hiraHlName*
	(`string`: デフォルト `"SkkeletonIndicatorHira"``)
	ひらがなモードで表示されるハイライトグループです。

kataHlName				 *skkeleton-indicator-config-kataHlName*
	(`string`: デフォルト `"SkkeletonIndicatorKata"`)
	カタカナモードで表示されるハイライトグループです。

hankataHlName			      *skkeleton-indicator-config-hankataHlName*
	(`string`: デフォルト `"SkkeletonIndicatorHankata"`)
	半角カタカナモードで表示されるハイライトグループです。

zenkakuHlName			      *skkeleton-indicator-config-zenkakuHlName*
	(`string`: デフォルト `"SkkeletonIndicatorZenkaku"`)
	全角英数モードで表示されるハイライトグループです。

abbrevHlName			       *skkeleton-indicator-config-abbrevHlName*
	(`string`: デフォルト `"SkkeletonIndicatorAbbrev"`)
	全角英数モードで表示されるハイライトグループです。

eijiText				   *skkeleton-indicator-config-eijiText*
	(`string`: デフォルト `"英字"`)
	直接入力モードで表示される文字列です。

hiraText				   *skkeleton-indicator-config-hiraText*
	(`string`: デフォルト `"ひら"`)
	ひらがなモードで表示される文字列です。

kataText				   *skkeleton-indicator-config-kataText*
	(`string`: デフォルト `"カタ"`)
	カタカナモードで表示される文字列です。

hankataText				*skkeleton-indicator-config-hankataText*
	(`string`: デフォルト `"半ｶﾀ"`)
	半角カタカナモードで表示される文字列です。

zenkakuText				*skkeleton-indicator-config-zenkakuText*
	(`string`: デフォルト `"全英"`)
	全角英数モードで表示される文字列です。

abbrevText				 *skkeleton-indicator-config-abbrevText*
	(`string`: デフォルト `"abbr"`)
	abbrev モードで表示される文字列です。

border					     *skkeleton-indicator-config-border*
	(`Border?|fun(args: BorderArgs): Border?`: デフォルト `nil`)
	`nil` 以外の値を与えると枠線を表示します。設定できる値は |nvim_open_win()|
	の `border` オプションと同じか、又はそれを返す関数です。例えば以下のよう
	な値が指定できます。
>lua
	    border = "single"
	    border = { "⡠", "⠤", "⢄", "⢸", "⠊", "⠒", "⠑", "⡇" }
<
	枠線のハイライトには文字列のものがそのまま使われます。そのため、文字列
	のハイライトも設定した方が綺麗に見えるでしょう。もし枠線を文字列と別の
	ハイライトにしたい場合、テーブルに直接指定するか、
>lua
	    border = { { "+", "MyCorner" }, { "x", "MyBorder" } }
<
	関数を使ってください。関数を使った場合は、モードに応じて枠線の形も自由
	に変えられます。関数の返り値が `nil` の場合は枠線が消えます。
>lua
	    border = function(args)
	      if args.mode == "eiji" then
		return "single"
	      elseif args.mode == "hira" then
		return "double"
	      end
	      return nil
	    end

            -- README にある例では以下のような関数を設定しています。
	    border = function(args)
	      if args.mode == "hira" then
		return { "⡠", "⠤", "⢄", "⢸", "⠊", "⠒", "⠑", "⡇" }
	      elseif args.mode == "kata" then
		return { "⡤", "⠤", "⢤", "⢸", "⠚", "⠒", "⠓", "⡇" }
	      elseif args.mode == "zenkaku" then
		return { "⣤", "⣤", "⣤", "⣿", "⠛", "⠛", "⠛", "⣿" }
	      end
	    end
<
	このオプションを指定しない場合と、 `nil` を返す関数を設定する場合は結果
	が異なります。後者では枠線分の空白が文字列の周りに表示されます。

	型は以下のように定義されています。
>lua
	    ---@alias Border
	    ---| "none"
	    ---| "single"
	    ---| "double"
	    ---| "rounded"
	    ---| "solid"
	    ---| "shadow"
	    ---| string[]
	    ---| string[][]

	    ---@class BorderArgs
	    ---@field mode "eiji"|"hira"|"kata"|"hankata"|"zenkaku"
<
row						*skkeleton-indicator-config-row*
	(`integer`: デフォルト `1` or `0`)
	インジケーターを表示する縦位置を、カーソル位置を基準として設定します。
	|skkeleton-indicator-config-border| が `nil`, `"none"`, `"shadow"` の場合、デ
	フォルト値は `1` 、それ以外の場合は `0` です。

col						*skkeleton-indicator-config-col*
	(`integer`: デフォルト `1`)
	インジケーターを表示する縦位置を、カーソル位置を基準として設定します。

zindex					     *skkeleton-indicator-config-zindex*
	(`integer`: デフォルト `nil`)
	インジケーターを他のウィンドウに重ねる際の順序を指定します。詳しくは
	|nvim_open_win()| の同名のオプションを参照してください。

alwaysShown				*skkeleton-indicator-config-alwaysShown*
	(`boolean`: デフォルト `true`)
	値が true の場合、インサートモードでは常にインジケータが表示されます。
	false の場合は Skkeleton が有効な時のみ表示されます(eiji インジケータ
	が表示されなくなります)。

fadeOutMs				  *skkeleton-indicator-config-fadeOutMs*
	(`integer`: デフォルト `3000`)
	インジケータが消えるまでの時間です。ミリ秒で指定します。0 を指定した場
	合、挿入モードの時は常に表示されるようになります。

ignoreFt				   *skkeleton-indicator-config-ignoreFt*
	(`string[]`: デフォルト `{}`)
	ファイルタイプを指定するとインジケータが表示されなくなります。

bufFilter				  *skkeleton-indicator-config-bufFilter*
	(`fun(bufnr: integer): boolean`: デフォルト `function(_) return true end`)
	インジケータを表示するか決める関数です。引数にはバッファの番号が渡され、
	true を返すと表示します。ignore_ft のファイルタイプの後に評価されます。

==============================================================================
CAVEATS						   *skkeleton-indicator-caveats*

実装上の制限から、 |cmdline-window| では表示できません。


vim:tw=78:fo=tcq2mM:ts=8:ft=help:norl
