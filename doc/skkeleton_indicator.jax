*skkeleton_indicator.txt*		    Skkeleton の状態を示すインジケータ

Author: delphinus
Licence: zlib

CONTENTS

Introduction		|skkeleton-indicator-introduction|
Install			|skkeleton-indicator-install|
Config			|skkeleton-indicator-config|
Functions		|skkeleton-indicator-functions|
Options			|skkeleton-indicator-options|
Highlight		|skkeleton-indicator-highlight|
Caveats			|skkeleton-indicator-caveats|


==============================================================================
INTRODUCTION				      *skkeleton-indicator-introduction*

*skkeleton_indicator* は |skkeleton| の状態をカーソルの側に表示します。

NOTE: このプラグインは Neovim 専用です。


==============================================================================
INSTALL						   *skkeleton-indicator-install*

WARNING: デフォルトブランチ `v2` は Neovim 0.10.0 以降で動作します。もしそれより
古いバージョンで動かしたい場合は `main` ブランチを利用してください。
https://github.com/delphinus/skkeleton_indicator.nvim/tree/main/

|lazy.nvim| だと以下のように設定します。
>lua
    { "delphinus/skkeleton_indicator.nvim", opts = {} }

上記のように設定すれば lazy.nvim が自動的に `setup()` を呼んでくれますが、その他
のプラグインマネージャーの場合は明示的に呼んでください。
>lua
    require("skkeleton_indicator").setup {}


==============================================================================
CONFIG						    *skkeleton-indicator-config*

文字列が表示される際のハイライトを変える場合、 `setup()` を呼ぶ前に定義してくだ
さい。
>lua
    vim.api.nvim_set_hl(0, "SkkeletonIndicatorEiji",
      { fg = "#88c0d0", bg = "#2e3440", bold = true })
    vim.api.nvim_set_hl(0, "SkkeletonIndicatorHira",
      { fg = "#2e3440", bg = "#a3be8c", bold = true })
    vim.api.nvim_set_hl(0, "SkkeletonIndicatorKata",
      { fg = "#2e3440", bg = "#ebcb8b", bold = true })
    vim.api.nvim_set_hl(0, "SkkeletonIndicatorHankata",
      { fg = "#2e3440", bg = "#b48ead", bold = true })
    vim.api.nvim_set_hl(0, "SkkeletonIndicatorZenkaku",
      { fg = "#2e3440", bg = "#88c0d0", bold = true })
    vim.api.nvim_set_hl(0, "SkkeletonIndicatorAbbrev",
      { fg = "#e5e9f0", bg = "#bf616a", bold = true })

    require("skkeleton_indicator").setup {}
<
既存のハイライトを使う場合はその名称を `setup()` を呼ぶ際に指定してください。
>lua
    require("skkeleton_indicator").setup {
      eijiHlName = "LineNr",
      hiraHlName = "String",
      kataHlName = "Todo",
      hankataHlName = "Special",
      zenkakuHlName = "LineNr",
      abbrevHlName = "Error",
    }
<
インジケーターに枠線を付けたい場合は `border` オプションを使ってください。
>lua
    require("skkeleton_indicator").setup { border = "single" }


==============================================================================
FUNCTIONS					 *skkeleton-indicator-functions*

モジュールを読み込む（ `require "skkeleton_indicator"` ）すると、 |InsertEnter| イ
ベントに自動コマンドがセットされ、挿入モード起動時にプラグインが起動します。

					   *skkeleton-indicator-functions-setup*
setup ~

型: `fun(opts: SkkeletonIndicatorOpts)`

設定を保存します。引数に誤った型の値を与えるとエラーになります。起動後に呼び出
した場合、変更は即時に反映されます。

					 *skkeleton-indicator-functions-refresh*
refresh ~

型: `fun()`

設定を反映させます。 |skkeleton-indicator-functions-setup| で設定した内容に加
え、各種ハイライトグループ |skkeleton-indicator-highlight| も反映されます。


==============================================================================
OPTIONS						   *skkeleton-indicator-options*

					*skkeleton-indicator-options-eijiHlName*
eijiHlName ~

デフォルト: `"SkkeletonIndicatorEiji"`
型: `string`

直接入力モードで表示される文字列に利用されるハイライトグループです。

					*skkeleton-indicator-options-hiraHlName*
hiraHlName ~

デフォルト: `"SkkeletonIndicatorHira"`
型: `string`

ひらがなモードで表示されるハイライトグループです。

					*skkeleton-indicator-options-kataHlName*
kataHlName ~

デフォルト: `"SkkeletonIndicatorKata"`
型: `string`

カタカナモードで表示されるハイライトグループです。

				     *skkeleton-indicator-options-hankataHlName*
hankataHlName ~

デフォルト: `"SkkeletonIndicatorHankata"`
型: `string`

半角カタカナモードで表示されるハイライトグループです。

				     *skkeleton-indicator-options-zenkakuHlName*
zenkakuHlName ~

デフォルト: `"SkkeletonIndicatorZenkaku"`
型: `string`

全角英数モードで表示されるハイライトグループです。

				     *skkeleton-indicator-options-abbrevHlName*
abbrevHlName ~

デフォルト: `"SkkeletonIndicatorAbbrev"`
型: `string`

abbrev モードで表示されるハイライトグループです。

					  *skkeleton-indicator-options-eijiText*
eijiText ~

デフォルト: `"英字"`
型: `string`

直接入力モードで表示される文字列です。

					  *skkeleton-indicator-options-hiraText*
hiraText ~

デフォルト: `"ひら"`
型: `string`

ひらがなモードで表示される文字列です。

					  *skkeleton-indicator-options-kataText*
kataText ~

デフォルト: `"カタ"`
型: `string`

カタカナモードで表示される文字列です。

				       *skkeleton-indicator-options-hankataText*
hankataText ~

デフォルト: `"半ｶﾀ"`
型: `string`

半角カタカナモードで表示される文字列です。

				       *skkeleton-indicator-options-zenkakuText*
zenkakuText ~

デフォルト: `"全英"`
型: `string`

全角英数モードで表示される文字列です。

					*skkeleton-indicator-options-abbrevText*
abbrevText ~

デフォルト: `"abbr"`
型: `string`

abbrev モードで表示される文字列です。

					    *skkeleton-indicator-options-border*
border ~

デフォルト: `nil`
型: `Border?|fun(args: BorderArgs): Border?`

`nil` 以外の値を与えると枠線を表示します。設定できる値は |nvim_open_win()| の
`border` オプションと同じか、又はそれを返す関数です。例えば以下のような値が指定
できます。
>lua
    border = "single"
    border = { "⡠", "⠤", "⢄", "⢸", "⠊", "⠒", "⠑", "⡇" }
<
枠線のハイライトには文字列のものがそのまま使われます。そのため、文字列のハイラ
イトも設定した方が綺麗に見えるでしょう。もし枠線を文字列と別のハイライトにした
い場合、テーブルに直接指定するか、
>lua
    border = { { "+", "MyCorner" }, { "x", "MyBorder" } }
<
関数を使ってください。関数を使った場合は、モードに応じて枠線の形も自由に変えら
れます。関数の返り値が `nil` の場合は枠線が消えます。
>lua
    border = function(args)
      if args.mode == "eiji" then
	return "single"
      elseif args.mode == "hira" then
	return "double"
      end
      return nil
    end

    -- README にある例では以下のような関数を設定しています。
    border = function(args)
      if args.mode == "hira" then
	return { "⡠", "⠤", "⢄", "⢸", "⠊", "⠒", "⠑", "⡇" }
      elseif args.mode == "kata" then
	return { "⡤", "⠤", "⢤", "⢸", "⠚", "⠒", "⠓", "⡇" }
      elseif args.mode == "zenkaku" then
	return { "⣤", "⣤", "⣤", "⣿", "⠛", "⠛", "⠛", "⣿" }
      end
    end
<
このオプションを指定しない場合と、 `nil` を返す関数を設定する場合は結果が異なり
ます。後者では枠線分の空白が文字列の周りに表示されます。

型は以下のように定義されています。
>lua
    ---@alias Border
    ---| "none"
    ---| "single"
    ---| "double"
    ---| "rounded"
    ---| "solid"
    ---| "shadow"
    ---| string[]
    ---| string[][]

    ---@class BorderArgs
    ---@field mode "eiji"|"hira"|"kata"|"hankata"|"zenkaku"
<
					       *skkeleton-indicator-options-row*
row ~

デフォルト: `1` or `0`
型: `integer`

インジケーターを表示する縦位置を、カーソル位置を基準として設定します。
|skkeleton-indicator-options-border| が `nil`, `"none"`, `"shadow"` の場合、デフォルト
値は `1`、それ以外の場合は `0` です。

					       *skkeleton-indicator-options-col*
col ~

デフォルト: `1`
型: `integer`

インジケーターを表示する縦位置を、カーソル位置を基準として設定します。

					    *skkeleton-indicator-options-zindex*
zindex ~

デフォルト: `nil`
型: `integer`

インジケーターを他のウィンドウに重ねる際の順序を指定します。詳しくは
|nvim_open_win()| にある同名のオプションを参照してください。

				       *skkeleton-indicator-options-alwaysShown*
alwaysShown ~

デフォルト: `true`
型: `boolean`

値が `true` の場合、インサートモードでは常にインジケータが表示されます。 `false`
の場合は Skkeleton が有効な時のみ表示されます(eiji インジケータが表示されなく
なります)。

					 *skkeleton-indicator-options-fadeOutMs*
fadeOutMs ~

デフォルト: `3000`
型: `integer`

インジケータが消えるまでの時間です。ミリ秒で指定します。0 を指定した場合、挿入
モードの時は常に表示されるようになります。

					  *skkeleton-indicator-options-ignoreFt*
ignoreFt ~

デフォルト: `{}`
型: `string[]`

ファイルタイプを指定するとインジケータが表示されなくなります。

					 *skkeleton-indicator-options-bufFilter*
bufFilter ~

デフォルト: `function(_) return true end`
型: `fun(bufnr: integer): boolean`

インジケータを表示するか決める関数です。引数にはバッファの番号が渡され、 `true`
を返すと表示します。ignore_ft のファイルタイプの後に評価されます。

			       *skkeleton-indicator-options-useDefaultHighlight*
useDefaultHighlight ~

デフォルト: `true`
型: `boolean`

デフォルトのカラースキームを使っている時、ユーザー独自のハイライトグループを設
定する場合は `false` に設定します。
|skkeleton-indicator-highlight-for-default-colorscheme| も参照してください。


==============================================================================
HIGHLIGHT					 *skkeleton-indicator-highlight*

以下に列挙したハイライトグループ |highlight-groups| をユーザー自身が設定していな
い場合、デフォルトの値が利用されます。その際 |'background'| の値を元に適切な配色
が利用されます。

			 *skkeleton-indicator-highlight-for-default-colorscheme*
------------------------------------------------------------------------------
For Default Colorscheme

デフォルトのカラースキームを利用している場合、ユーザーが独自のハイライトグルー
プを設定していても無視されます。その代わり、起動時だけでなく、起動後明示的に
|'background'| の値を変更した時も適切な配色に変更されます。

もしこの強制を避け、デフォルトカラースキームでユーザー独自の配色を利用したい場
合、 |skkeleton-indicator-options-useDefaultHighlight| を参照してください。

	  *skkeleton-indicator-highlight-change-every-time-change-of-background*
------------------------------------------------------------------------------
Change every time change of 'background'

デフォルトのカラースキームで対応しているように、起動後に |'background'| を変更し
た際にユーザー独自のカラースキームを設定したい場合、 |OptionSet| イベントを使っ
てください。
>lua
    vim.api.nvim_create_autocmd("OptionSet", {
      pattern = "background",
      callback = function(args)
	if args.match == "light" then
	  vim.api.nvim_set_hl(0, "SkkeletonIndicatorEiji",
	    { fg = "NvimDarkBlue", bg = "NvimLightGrey2" })
	  -- その他の色も設定する。
	else
	  ------
	end
	require("skkeleton_indicator").refresh()
      end,
    })

ハイライトグループの設定後、 |skkeleton-indicator-functions-refresh| を忘れずに
呼んでください。
<
			  *skkeleton-indicator-highlight-skkeletonindicatoreiji*
SkkeletonIndicatorEiji ~

デフォルト:
  dark: >lua
    { fg = "NvimLightBlue", bg = "NvimDarkGrey2",
      ctermfg = "blue", ctermbg = "black", bold = true }
<  light: >lua
    { fg = "NvimDarkBlue", bg = "NvimLightGrey2",
      ctermfg = "blue", ctermbg = "white", bold = true },

直接入力モードで表示される文字列に利用されハイライトグループです。

			  *skkeleton-indicator-highlight-skkeletonindicatorhira*
SkkeletonIndicatorHira ~

デフォルト:
  dark: >lua
    { fg = "NvimDarkGrey2", bg = "NvimLightGreen",
      ctermfg = "black", ctermbg = "green", bold = true }
<  light: >lua
    { fg = "NvimDarkGrey2", bg = "NvimLightGreen",
      ctermfg = "white", ctermbg = "green", bold = true },

ひらがなモードで表示される文字列に利用されハイライトグループです。

			  *skkeleton-indicator-highlight-skkeletonindicatorkata*
SkkeletonIndicatorKata ~

デフォルト:
  dark: >lua
    { fg = "NvimDarkGrey2", bg = "NvimLightYellow",
      ctermfg = "black", ctermbg = "yellow", bold = true }
<  light: >lua
    { fg = "NvimDarkGrey2", bg = "NvimLightYellow",
      ctermfg = "black", ctermbg = "yellow", bold = true },

カタカナモードで表示される文字列に利用されハイライトグループです。

		       *skkeleton-indicator-highlight-skkeletonindicatorhankata*
SkkeletonIndicatorHankata ~

デフォルト:
  dark: >lua
    { fg = "NvimDarkGrey2", bg = "NvimLightMagenta",
      ctermfg = "black", ctermbg = "magenta", bold = true }
<  light: >lua
    { fg = "NvimDarkGrey2", bg = "NvimLightMagenta",
      ctermfg = "white", ctermbg = "magenta", bold = true },

半角カタカナモードで表示される文字列に利用されハイライトグループです。

		       *skkeleton-indicator-highlight-skkeletonindicatorZenkaku*
SkkeletonIndicatorZenkaku ~

デフォルト:
  dark: >lua
    { fg = "NvimLightGrey2", bg = "NvimDarkCyan",
      ctermfg = "black", ctermbg = "cyan", bold = true }
<  light: >lua
    { fg = "NvimDarkGrey2", bg = "NvimLightBlue",
      ctermfg = "black", ctermbg = "blue", bold = true },

全角英数モードで表示される文字列に利用されハイライトグループです。

			*skkeleton-indicator-highlight-skkeletonindicatorAbbrev*
SkkeletonIndicatorAbbrev ~

デフォルト:
  dark: >lua
    { fg = "NvimLightGrey2", bg = "NvimDarkRed",
      ctermfg = "white", ctermbg = "red", bold = true }
<  light: >lua
    { fg = "NvimDarkGrey2", bg = "NvimLightRed",
      ctermfg = "black", ctermbg = "red", bold = true },

abbrev モードで表示される文字列に利用されハイライトグループです。


==============================================================================
CAVEATS						   *skkeleton-indicator-caveats*

実装上の制限から、 |cmdline-window| では表示できません。


vim:tw=78:fo=tcq2mM:ts=8:ft=help:norl:noet
